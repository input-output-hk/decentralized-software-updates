name:                decentralized-updates
version:             0.1.0.0
synopsis:            Decentralized updates for Cardano
description:         A prototype for a decentralized update mechanism for Cardano
license:             Apache
license-files:       LICENSE
                     NOTICE
author:              IO Research and IOHK Formal Methods Team
maintainer:          formal.methods@iohk.io
copyright:           2019 IOHK
category:            Currency
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10

flag asserts
  description: Enable assertions
  manual:      False
  default:     False

flag pretty
  description: Enable pretty printing of error mesages and debug traces
  manual:      True
  default:     True


library
  hs-source-dirs:      src
  exposed-modules:     Cardano.Ledger.Spec.Classes.Indexed
                     , Cardano.Ledger.Spec.Classes.Hashable
                     , Cardano.Ledger.Spec.Classes.HasAuthor
                     , Cardano.Ledger.Spec.Classes.HasSalt
                     , Cardano.Ledger.Spec.Classes.HasSigningScheme
                     , Cardano.Ledger.Spec.Classes.Sizeable
                     , Cardano.Ledger.Spec.State.ActivationState
                     , Cardano.Ledger.Spec.State.ActiveSIPs
                     , Cardano.Ledger.Spec.State.ApprovedSIPs
                     , Cardano.Ledger.Spec.State.Ballot
                     , Cardano.Ledger.Spec.State.Participants
                     , Cardano.Ledger.Spec.State.ProposalState
                     , Cardano.Ledger.Spec.State.ProposalsState
                     , Cardano.Ledger.Spec.State.RevealedSIPs
                     , Cardano.Ledger.Spec.State.SIPsVoteResults
                     , Cardano.Ledger.Spec.State.StakeDistribution
                     , Cardano.Ledger.Spec.State.SubmittedSIPs
                     , Cardano.Ledger.Spec.State.WhenActive
                     , Cardano.Ledger.Spec.State.WhenEnded
                     , Cardano.Ledger.Spec.State.WhenRevealedSIPs
                     , Cardano.Ledger.Spec.State.WhenStable
                     , Cardano.Ledger.Spec.State.WhenSubmittedSIPs
                     , Cardano.Ledger.Spec.STS.Sized
                     , Cardano.Ledger.Spec.STS.Update
                     , Cardano.Ledger.Spec.STS.Update.Approval
                     , Cardano.Ledger.Spec.STS.Update.Approval.Data
                     , Cardano.Ledger.Spec.STS.Update.Hupdate
                     , Cardano.Ledger.Spec.STS.Update.Tallysip
                     , Cardano.Ledger.Spec.STS.Update.TallyImplVotes
                     , Cardano.Ledger.Spec.STS.Update.Data
                     , Cardano.Ledger.Spec.STS.Update.Data.Commit
                     , Cardano.Ledger.Spec.STS.Update.Ideation
                     , Cardano.Ledger.Spec.STS.Update.Ideation.Data
                     , Cardano.Ledger.Spec.STS.Update.Implementation
                     , Cardano.Ledger.Spec.STS.Update.Definitions
                     , Cardano.Ledger.Spec.Classes.TracksSlotTime
                     , Cardano.Ledger.Spec.Classes.HasStakeDistribution
                     , Cardano.Ledger.Spec.Classes.HasAdversarialStakeRatio
                     , Cardano.Ledger.Spec.STS.CanExtract
                     -- Non-update specific modules. Can be extracted to a library if needed somewhere else.
                     , Cardano.Ledger.Assert
                     , Cardano.Ledger.Debug
  build-depends:       base >=4.11 && <5
                     , bimap >= 0.4.0
                     , containers
                     , generic-monoid
                     , text
                     , newtype-generics
                     , strict-base-types
                     , monad-validate
                     , pretty-simple
                     , random
                     -- Cardano specific imports
                     , cardano-prelude
                     , cardano-binary
                     , cardano-crypto-class
                     , small-steps
                     , cs-ledger
                     , deepseq
                     -- Needed for 'Cardano.Ledger.Debug' only. We might want to
                     -- put this module on our test section.
                     , mtl
  default-language:    Haskell2010
  ghc-options:        -Wall
                      -Wcompat
                      -Wincomplete-record-updates
                      -Wincomplete-uni-patterns
                      -Wredundant-constraints
                      -fno-ignore-asserts
  if flag(asserts)
    ghc-options:       -fno-ignore-asserts
    cpp-options:       -DENABLE_ASSERTIONS
  if flag(pretty)
    cpp-options:       -DPRETTY_PRINT


test-suite ledger-rules-test
  hs-source-dirs:      test
  main-is:             Main.hs
  type:                exitcode-stdio-1.0
  other-modules:
                       Cardano.Ledger.Update.UnitTests.Ideation
                     , Cardano.Ledger.Update.UnitTests.Approval
                     , Cardano.Ledger.Update.UnitTests.Activation
                     , Cardano.Ledger.Update.UnitTests.Common

                     , Cardano.Ledger.UpdateSpec
                     , Cardano.Ledger.Update.TestCase
                     , Cardano.Ledger.Update.Interface

                     -- * General utilities.
                     , Cardano.Ledger.Mock
                     -- ** Unit testing
                     , Util.TestCase
                     -- ** Property testing
                     , Properties
                     , SUTTest
                     , Cardano.Ledger.Generators.QuickCheck
  default-language:    Haskell2010
  build-depends:       base
                     , containers
                     , mtl
                     , QuickCheck
                     , tasty
                     , tasty-quickcheck
                     , pretty-simple
                     , text
                     , random
                     -- Cardano specific imports
                     , cardano-crypto-class
                     , cardano-binary
                     , decentralized-updates
                     , cs-ledger
                     , small-steps
                     , deepseq
  ghc-options:         -Wall
                       -Wcompat
                       -Wincomplete-record-updates
                       -Wincomplete-uni-patterns
                       -Wredundant-constraints
                       -- We set a bound here so that we're alerted of potential
                       -- space leaks in our generators (or test) code.
                       --
                       -- The 4 megabytes stack bound and 150 megabytes heap bound were
                       -- determined ad-hoc.
                       "-with-rtsopts=-K1m -M150m"
                       -threaded
                       -rtsopts
                       -fno-ignore-asserts

benchmark worst-case-analysis
  hs-source-dirs:      bench/worst-case-analysis
  main-is:             Main.hs
  type:                exitcode-stdio-1.0
  default-language:    Haskell2010
  build-depends:       base
  ghc-options:         -Wall
                       -Wcompat
                       -Wincomplete-record-updates
                       -Wincomplete-uni-patterns
                       -Wredundant-constraints
                       "-with-rtsopts=-K1m -M15m"
                       -threaded
                       -rtsopts
  other-modules:       Cardano.Ledger.Benchmarks.Update.WorstCaseAnalysis
                     , Cardano.Ledger.Benchmarks.Update.WorstCaseAnalysis.PayloadSizes
                     , Cardano.Ledger.Benchmarks.Update.WorstCaseAnalysis.Units
                     , Cardano.Ledger.Benchmarks.Update.WorstCaseAnalysis.Arithmetic
                     , Cardano.Ledger.Benchmarks.Update.WorstCaseAnalysis.Units.TBPS
                     , Cardano.Ledger.Benchmarks.Update.WorstCaseAnalysis.Report.LaTeX


benchmark update-benchmarking
  hs-source-dirs:      bench/micro-benchmarking
  main-is:             Main.hs
  type:                exitcode-stdio-1.0
  default-language:    Haskell2010
  build-depends:       base
                     , cereal
                     , containers
                     , criterion
                     , cryptonite
                     , deepseq
                     , pretty-simple
                       -- Dependencies needed for defining the bench hashing
                     , cborg
                     , bytestring
                     , memory
                       -- Cardano deps
                     , cs-ledger
                     , cardano-binary
                     , cardano-crypto-class
                     , decentralized-updates
                     , cardano-prelude
  ghc-options:         -Wall
                       -Wcompat
                       -Wincomplete-record-updates
                       -Wincomplete-uni-patterns
                       -Wredundant-constraints
                       -- We use large maps for storing and manilpulating data
                       -- (for instance, we have a maximum 10M proposals). Hence
                       -- we need to set very large heap limits.
                       "-with-rtsopts=-K1m -M6500m"
                       -threaded
                       -rtsopts
  other-modules:       Cardano.Ledger.Benchmarks.Update.Tally
